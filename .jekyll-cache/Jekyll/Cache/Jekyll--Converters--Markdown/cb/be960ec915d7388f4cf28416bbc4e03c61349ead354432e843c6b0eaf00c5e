I"§<p>Just say something about yourself. :+1:</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "Application.hpp"
</span>
<span class="n">App</span><span class="o">::</span><span class="n">App</span><span class="p">(</span><span class="kt">int</span> <span class="n">width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">height</span><span class="p">,</span> <span class="n">sf</span><span class="o">::</span><span class="n">String</span> <span class="n">title</span><span class="p">)</span>
<span class="p">{</span>
	<span class="c1">// Create render window.</span>
	<span class="n">window</span><span class="p">.</span><span class="n">create</span><span class="p">(</span><span class="n">sf</span><span class="o">::</span><span class="n">VideoMode</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">),</span> <span class="n">title</span><span class="p">);</span>

	<span class="c1">// Init timer variables.</span>
	<span class="n">previousUpdate</span> <span class="o">=</span> <span class="n">elapsedTime</span> <span class="o">=</span> <span class="n">frameDelta</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="n">sf</span><span class="o">::</span><span class="n">Clock</span> <span class="n">clock</span><span class="p">;</span>

	<span class="c1">// Number of game ticks per second.</span>
	<span class="k">const</span> <span class="kt">int</span> <span class="n">tickRate</span> <span class="o">=</span> <span class="mi">30</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">(</span><span class="n">window</span><span class="p">.</span><span class="n">isOpen</span><span class="p">())</span>
	<span class="p">{</span>
		<span class="c1">// Process windows events (move, resize, close).</span>
		<span class="n">processEvents</span><span class="p">();</span>
		<span class="c1">// Process user inputs.</span>
		<span class="n">processInput</span><span class="p">();</span>

		<span class="c1">// Calculate time variables.</span>
		<span class="n">frameDelta</span> <span class="o">=</span> <span class="n">clock</span><span class="p">.</span><span class="n">getElapsedTime</span><span class="p">().</span><span class="n">asMilliseconds</span><span class="p">();</span>
		<span class="n">clock</span><span class="p">.</span><span class="n">restart</span><span class="p">();</span>
		<span class="n">elapsedTime</span> <span class="o">=</span> <span class="n">elapsedTime</span> <span class="o">+</span> <span class="n">frameDelta</span><span class="p">;</span>
		<span class="c1">// If we are due a game tick,</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">elapsedTime</span> <span class="o">-</span> <span class="n">previousUpdate</span> <span class="o">&gt;=</span> <span class="p">(</span><span class="mi">1000</span> <span class="o">/</span> <span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="n">tickRate</span><span class="p">))</span>
		<span class="p">{</span>
			<span class="k">this</span><span class="o">-&gt;</span><span class="n">fixedUpdate</span><span class="p">();</span>
			<span class="n">previousUpdate</span> <span class="o">=</span> <span class="n">elapsedTime</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">this</span><span class="o">-&gt;</span><span class="n">update</span><span class="p">();</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">App</span><span class="o">::</span><span class="n">update</span><span class="p">()</span>
<span class="p">{</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">App</span><span class="o">::</span><span class="n">fixedUpdate</span><span class="p">()</span>
<span class="p">{</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">App</span><span class="o">::</span><span class="n">processEvents</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">sf</span><span class="o">::</span><span class="n">Event</span> <span class="n">e</span><span class="p">;</span>
	<span class="k">while</span> <span class="p">(</span><span class="n">window</span><span class="p">.</span><span class="n">pollEvent</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
	<span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">type</span> <span class="o">==</span> <span class="n">sf</span><span class="o">::</span><span class="n">Event</span><span class="o">::</span><span class="n">Closed</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">window</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">App</span><span class="o">::</span><span class="n">processInput</span><span class="p">()</span>
<span class="p">{</span>
<span class="p">}</span>
</code></pre></div></div>
:ET